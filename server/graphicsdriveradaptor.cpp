/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ../com.deepin.daemon.GraphicsDriver.xml -i graphicsdriverinterface.h -a graphicsdriveradaptor
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "graphicsdriveradaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class GraphicsDriverAdaptor
 */

GraphicsDriverAdaptor::GraphicsDriverAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

GraphicsDriverAdaptor::~GraphicsDriverAdaptor()
{
    // destructor
}

QString GraphicsDriverAdaptor::OldDriver()
{
    // handle method call com.deepin.daemon.GraphicsDriver.OldDriver
    QString out0;
    QMetaObject::invokeMethod(parent(), "OldDriver", Q_RETURN_ARG(QString, out0));
    return out0;
}

QStringList GraphicsDriverAdaptor::getDevice()
{
    // handle method call com.deepin.daemon.GraphicsDriver.getDevice
    QStringList out0;
    QMetaObject::invokeMethod(parent(), "getDevice", Q_RETURN_ARG(QStringList, out0));
    return out0;
}

int GraphicsDriverAdaptor::getDeviceFlag()
{
    // handle method call com.deepin.daemon.GraphicsDriver.getDeviceFlag
    int out0;
    QMetaObject::invokeMethod(parent(), "getDeviceFlag", Q_RETURN_ARG(int, out0));
    return out0;
}

int GraphicsDriverAdaptor::getInstallStatus()
{
    // handle method call com.deepin.daemon.GraphicsDriver.getInstallStatus
    int out0;
    QMetaObject::invokeMethod(parent(), "getInstallStatus", Q_RETURN_ARG(int, out0));
    return out0;
}

void GraphicsDriverAdaptor::installDriver()
{
    // handle method call com.deepin.daemon.GraphicsDriver.installDriver
    QMetaObject::invokeMethod(parent(), "installDriver");
}

bool GraphicsDriverAdaptor::isTestSuccess()
{
    // handle method call com.deepin.daemon.GraphicsDriver.isTestSuccess
    bool out0;
    QMetaObject::invokeMethod(parent(), "isTestSuccess", Q_RETURN_ARG(bool, out0));
    return out0;
}

QString GraphicsDriverAdaptor::newDriver()
{
    // handle method call com.deepin.daemon.GraphicsDriver.newDriver
    QString out0;
    QMetaObject::invokeMethod(parent(), "newDriver", Q_RETURN_ARG(QString, out0));
    return out0;
}

void GraphicsDriverAdaptor::reboot()
{
    // handle method call com.deepin.daemon.GraphicsDriver.reboot
    QMetaObject::invokeMethod(parent(), "reboot");
}

void GraphicsDriverAdaptor::removeDriver()
{
    // handle method call com.deepin.daemon.GraphicsDriver.removeDriver
    QMetaObject::invokeMethod(parent(), "removeDriver");
}

